{"ast":null,"code":"import HelloWorld from './components/HelloWorld.vue';\nimport EmployeeTable from './components/EmployeeTable.vue';\nimport EmployeeForm from './components/EmployeeForm.vue';\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld,\n    EmployeeTable,\n    EmployeeForm\n  },\n  data() {\n    return {\n      employees: [\n        // {\n        //   id:1,\n        //   name:'Thushanth Sbm',\n        //   email: 'th@gmail.com'\n        // },\n        // {\n        //   id:2,\n        //   name:'Kanthan Stv',\n        //   email: 'kat@gmail.com'\n        // },\n        // {\n        //   id:3,\n        //   name:'Jack',\n        //   email: 'tty@gmail.com'\n        // }\n      ]\n    };\n  },\n  methods: {\n    async addEmployee(employee) {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users', {\n          mathod: 'POST',\n          body: JSON.stringify(employee),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8'\n          }\n        });\n        const data = await response.json();\n\n        // const lastId = this.employees.length>0?this.employees[this.employees.length-1].id:0;\n        // const id = lastId + 1;\n\n        // const newEmployee = {\n        //   ...employee,id:id\n        // }\n\n        // this.employees = [...this.employees,newEmployee];\n\n        this.employees = [...this.employees, data];\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async deleteEmployee(id) {\n      try {} catch (error) {\n        console.log(error);\n      }\n      this.employees = this.employees.filter(employee => {\n        return employee.id != id;\n      });\n    },\n    async editEmployee(id, updatedEmployee) {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users/' + id, {\n          mathod: 'PUT',\n          body: JSON.stringify(updatedEmployee),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8'\n          }\n        });\n        const data = await response.json();\n        this.employees.map(employee => {\n          // return employee.id==id?updatedEmployee:employee;\n          return employee.id == id ? data : employee;\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getEmployees() {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users', {\n          method: 'GET'\n        });\n        const data = await response.json();\n        this.employees = data;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  mounted() {\n    console.log('Calling Something !');\n    this.getEmployees();\n  }\n};","map":{"version":3,"names":["HelloWorld","EmployeeTable","EmployeeForm","name","components","data","employees","methods","addEmployee","employee","response","fetch","mathod","body","JSON","stringify","headers","json","error","console","log","deleteEmployee","id","filter","editEmployee","updatedEmployee","map","getEmployees","method","mounted"],"sources":["C:\\Users\\hushanh\\Thushanth_Vue_Example\\Vue\\myapp\\src\\App.vue"],"sourcesContent":["<template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n  <HelloWorld msg=\"Welcome to Your Vue.js App\"/>\n    <div class=\"small-container\">\n      <h1>Employees</h1>\n      <employee-form @add:employee=\"addEmployee\"/>\n      <employee-table \n      v-bind:employees =\"employees\" \n      @delete:employee=\"deleteEmployee\"\n      @edit:employee=\"editEmployee\"\n      />\n  </div>\n</template>\n\n<script>\nimport HelloWorld from './components/HelloWorld.vue'\nimport EmployeeTable from './components/EmployeeTable.vue'\nimport EmployeeForm from './components/EmployeeForm.vue';\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld,\n    EmployeeTable,\n    EmployeeForm\n  },\n  data(){\n    return{\n      employees:[\n      // {\n      //   id:1,\n      //   name:'Thushanth Sbm',\n      //   email: 'th@gmail.com'\n      // },\n      // {\n      //   id:2,\n      //   name:'Kanthan Stv',\n      //   email: 'kat@gmail.com'\n      // },\n      // {\n      //   id:3,\n      //   name:'Jack',\n      //   email: 'tty@gmail.com'\n      // }\n    ]\n    }\n  },\n  methods:{\n    async addEmployee(employee){\n      try {\n\n        const response = await fetch('https://jsonplaceholder.typicode.com/users',\n          {\n            mathod:'POST',\n            body:JSON.stringify(employee),\n            headers:{ 'Content-type': 'application/json; charset=UTF-8'}\n          }\n      );\n\n      const data = await response.json();\n\n      // const lastId = this.employees.length>0?this.employees[this.employees.length-1].id:0;\n      // const id = lastId + 1;\n\n      // const newEmployee = {\n      //   ...employee,id:id\n      // }\n      \n      // this.employees = [...this.employees,newEmployee];\n\n      this.employees = [...this.employees,data];\n      } catch (error) {\n        console.log(error)\n      }\n      \n    },\n    async deleteEmployee(id){\n\n      try {\n        \n      } catch (error) {\n        console.log(error)\n      }\n      this.employees=this.employees.filter((employee)=>{\n            return employee.id != id;\n      })\n    },\n    async editEmployee(id,updatedEmployee){\n\n      try {\n        \n              const response = await fetch('https://jsonplaceholder.typicode.com/users/' +id,\n                {\n                  mathod:'PUT',\n                  body:JSON.stringify(updatedEmployee),\n                  headers:{ 'Content-type': 'application/json; charset=UTF-8'}\n                }\n            );\n\n            const data = await response.json();\n            \n            this.employees.map((employee)=>{\n              // return employee.id==id?updatedEmployee:employee;\n              return employee.id==id?data:employee;\n            })\n\n      } catch (error) {\n        console.log(error);\n      }\n      \n    },\n\n    async getEmployees(){\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users' ,{method:'GET'})\n        const data = await response.json();\n        this.employees = data;\n\n      } catch (error) {\n        console.log(error)\n      }\n\n    }\n  },\n  mounted(){\n    console.log('Calling Something !')\n    this.getEmployees();\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\nbutton{\nbackground:#009435;\nborder:1px solid #009435;\n}\n.small-container{\n   max-width:680px;\n}\n</style>\n"],"mappings":"AAeA,OAAOA,UAAS,MAAO,6BAA4B;AACnD,OAAOC,aAAY,MAAO,gCAA+B;AACzD,OAAOC,YAAW,MAAO,+BAA+B;AACxD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVJ,UAAU;IACVC,aAAa;IACbC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,SAAS,EAAC;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA;IAEF;EACF,CAAC;EACDC,OAAO,EAAC;IACN,MAAMC,WAAWA,CAACC,QAAQ,EAAC;MACzB,IAAI;QAEF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,4CAA4C,EACvE;UACEC,MAAM,EAAC,MAAM;UACbC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC;UAC7BO,OAAO,EAAC;YAAE,cAAc,EAAE;UAAiC;QAC7D,CACJ,CAAC;QAED,MAAMX,IAAG,GAAI,MAAMK,QAAQ,CAACO,IAAI,CAAC,CAAC;;QAElC;QACA;;QAEA;QACA;QACA;;QAEA;;QAEA,IAAI,CAACX,SAAQ,GAAI,CAAC,GAAG,IAAI,CAACA,SAAS,EAACD,IAAI,CAAC;MACzC,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK;MACnB;IAEF,CAAC;IACD,MAAMG,cAAcA,CAACC,EAAE,EAAC;MAEtB,IAAI,CAEJ,EAAE,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK;MACnB;MACA,IAAI,CAACZ,SAAS,GAAC,IAAI,CAACA,SAAS,CAACiB,MAAM,CAAEd,QAAQ,IAAG;QAC3C,OAAOA,QAAQ,CAACa,EAAC,IAAKA,EAAE;MAC9B,CAAC;IACH,CAAC;IACD,MAAME,YAAYA,CAACF,EAAE,EAACG,eAAe,EAAC;MAEpC,IAAI;QAEI,MAAMf,QAAO,GAAI,MAAMC,KAAK,CAAC,6CAA4C,GAAGW,EAAE,EAC5E;UACEV,MAAM,EAAC,KAAK;UACZC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACU,eAAe,CAAC;UACpCT,OAAO,EAAC;YAAE,cAAc,EAAE;UAAiC;QAC7D,CACJ,CAAC;QAED,MAAMX,IAAG,GAAI,MAAMK,QAAQ,CAACO,IAAI,CAAC,CAAC;QAElC,IAAI,CAACX,SAAS,CAACoB,GAAG,CAAEjB,QAAQ,IAAG;UAC7B;UACA,OAAOA,QAAQ,CAACa,EAAE,IAAEA,EAAE,GAACjB,IAAI,GAACI,QAAQ;QACtC,CAAC;MAEP,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IAEF,CAAC;IAED,MAAMS,YAAYA,CAAA,EAAE;MAClB,IAAI;QACF,MAAMjB,QAAO,GAAI,MAAMC,KAAK,CAAC,4CAA2C,EAAG;UAACiB,MAAM,EAAC;QAAK,CAAC;QACzF,MAAMvB,IAAG,GAAI,MAAMK,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,IAAI,CAACX,SAAQ,GAAID,IAAI;MAEvB,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK;MACnB;IAEF;EACF,CAAC;EACDW,OAAOA,CAAA,EAAE;IACPV,OAAO,CAACC,GAAG,CAAC,qBAAqB;IACjC,IAAI,CAACO,YAAY,CAAC,CAAC;EACrB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}